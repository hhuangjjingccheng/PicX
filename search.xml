<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/23/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>清空表</title>
    <url>/2022/06/01/clean-table/</url>
    <content><![CDATA[<h3 id="一、清空表"><a href="#一、清空表" class="headerlink" title="一、清空表"></a>一、清空表</h3><ol>
<li><h4 id="清空单表"><a href="#清空单表" class="headerlink" title="清空单表"></a>清空单表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRUNCATE table table_name;</span><br></pre></td></tr></table></figure></li>
<li><h4 id="清空库中所有表"><a href="#清空库中所有表" class="headerlink" title="清空库中所有表"></a>清空库中所有表</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select concat(&#x27;TRUNCATE table &#x27;,table_name,&#x27;;&#x27;) from information_schema.TABLES where table_schema=&#x27;库名&#x27;;</span><br></pre></td></tr></table></figure>

<ul>
<li>查询出要执行的sql语句，复制出来执行</li>
</ul>
</li>
<li><p>查询库中所有表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema = &#x27;库名&#x27;;</span><br></pre></td></tr></table></figure></li>
<li><p>查询表中所有字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT column_name,column_comment </span><br><span class="line">FROM information_schema.COLUMNS </span><br><span class="line">WHERE table_name = &#x27;表名&#x27; </span><br><span class="line">AND table_schema = &#x27;库名&#x27;;</span><br></pre></td></tr></table></figure></li>
<li><p>hjc</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
  </entry>
  <entry>
    <title>参考文档</title>
    <url>/2022/06/01/document/</url>
    <content><![CDATA[<ul>
<li><p><a href="http://43.138.34.9:3000/sirius/Linux%E9%80%9F%E6%9F%A5%E5%A4%87%E5%BF%98%E6%89%8B%E5%86%8C_20220601150536A001.pdf">Linux速查备忘手册</a></p>
</li>
<li><p><a href="http://43.138.34.9:3000/sirius/Navicat%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3_20220601173045A001.pdf">Navicat帮助文档</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Document</category>
      </categories>
  </entry>
  <entry>
    <title>常用命令</title>
    <url>/2022/06/02/docker/</url>
    <content><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol>
<li><p>搜索docker镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search  name</span><br></pre></td></tr></table></figure>

<p>name:需要搜索的镜像名称</p>
</li>
<li><p>拉取（下载）需要的镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull name</span><br></pre></td></tr></table></figure></li>
<li><p>查看所有镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li>
<li><p>查看所有容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之安装Mysql</title>
    <url>/2022/06/02/docker_mysql/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>查看可用镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure>

<ul>
<li>尽量选取使用最多的</li>
</ul>
</li>
<li><p>拉去所需镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure></li>
<li><p>查看镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure></li>
<li><p>启动镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 3218b38490ce</span><br></pre></td></tr></table></figure>

<ul>
<li>–name mysql：设置容器名称</li>
<li>-p 3306:3306：映射的端口</li>
<li>-e MYSQL_ROOT_PASSWORD=123456：密码设置为123456</li>
<li>3218b38490ce：镜像id</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之安装Redis</title>
    <url>/2022/06/02/docker_redis/</url>
    <content><![CDATA[<ol>
<li><p>运行docker容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -itd --name redis -p 6379:6379 7614ae9453d1 --requirepass &quot;password&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>–name redis：设置容器名称为redis</p>
</li>
<li><p>7614ae9453d1：镜像id（IMAGE ID）</p>
</li>
<li><p>–requirepass “password”：设置redis密码为 password</p>
</li>
</ul>
</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之安装Docker</title>
    <url>/2022/06/02/docker_%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<ol>
<li><p>更新现有的软件包列表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure></li>
<li><p>安装一些必备软件包，让 apt 通过 HTTPS 使用软件包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure></li>
<li><p>将官方 Docker 版本库的 GPG 密钥添加到系统中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>

<p>执行后显示      OK</p>
</li>
<li><p>将 Docker 版本库添加到APT源</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable&quot;</span><br></pre></td></tr></table></figure>

<p>执行后显示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Get:1 https://download.docker.com/linux/ubuntu focal InRelease [36.2 kB]                </span><br><span class="line"></span><br><span class="line">Hit:2 http://cn.archive.ubuntu.com/ubuntu focal InRelease                        </span><br><span class="line"></span><br><span class="line">Get:3 [https://download.docker.com/linux/ubuntu focal/stable](https://download.docker.com/linux/ubuntu focal/stable) amd64 Packages [3056 B]</span><br><span class="line"></span><br><span class="line">Hit:4 http://cn.archive.ubuntu.com/ubuntu focal-updates InRelease</span><br><span class="line"></span><br><span class="line">Hit:5 http://cn.archive.ubuntu.com/ubuntu focal-backports InRelease</span><br><span class="line"></span><br><span class="line">Hit:6 http://cn.archive.ubuntu.com/ubuntu focal-security InRelease</span><br><span class="line"></span><br><span class="line">Fetched 39.2 kB in 2s (16.1 kB/s)</span><br><span class="line"></span><br><span class="line">Reading package lists... Done</span><br></pre></td></tr></table></figure></li>
<li><p>用新添加的 Docker 软件包来进行升级更新</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure></li>
<li><p>确保要从 Docker 版本库，而不是默认的 Ubuntu 版本库进行安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-cache policy docker-ce</span><br></pre></td></tr></table></figure>

<p>执行后结果</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-ce:</span><br><span class="line">  Installed: (none)</span><br><span class="line">  Candidate: 5:19.03.12~3-0~ubuntu-focal</span><br><span class="line">  Version table:</span><br><span class="line">     5:19.03.12~3-0~ubuntu-focal 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages</span><br><span class="line">     5:19.03.11~3-0~ubuntu-focal 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages</span><br><span class="line">     5:19.03.10~3-0~ubuntu-focal 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages</span><br><span class="line">     5:19.03.9~3-0~ubuntu-focal 500</span><br><span class="line">        500 https://download.docker.com/linux/ubuntu focal/stable amd64 Packages</span><br></pre></td></tr></table></figure></li>
<li><p>安装 Docker</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install docker-ce</span><br></pre></td></tr></table></figure></li>
<li><p>检查 Docker 是否正在运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status docker</span><br></pre></td></tr></table></figure>

<p>执行后显示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">● docker.service - Docker Application Container Engine</span><br><span class="line">     Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sat 2020-07-08 02:55:20 UTC; 5min ago</span><br><span class="line">TriggeredBy: ● docker.socket</span><br><span class="line">       Docs: https://docs.docker.com</span><br><span class="line">   Main PID: 4287 (dockerd)</span><br><span class="line">      Tasks: 8</span><br><span class="line">     Memory: 36.4M</span><br><span class="line">     CGroup: /system.slice/docker.service</span><br><span class="line">             └─4287 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之基础命令</title>
    <url>/2022/06/02/docker_%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<ol>
<li><p>查看所有容器 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>CONTAINER ID:</strong> 容器 ID。</p>
</li>
<li><p><strong>IMAGE:</strong> 使用的镜像。</p>
</li>
<li><p><strong>COMMAND:</strong> 启动容器时运行的命令。</p>
</li>
<li><p><strong>CREATED:</strong> 容器的创建时间。</p>
</li>
<li><p><strong>STATUS:</strong> 容器状态。</p>
<p>状态有7种：</p>
<ul>
<li>created（已创建）restarting（重启中）</li>
<li>running 或 Up（运行中）removing（迁移中）</li>
<li>paused（暂停）exited（停止）dead（死亡）</li>
</ul>
</li>
<li><p><strong>PORTS:</strong> 容器的端口信息和使用的连接类型（tcp\udp）。</p>
</li>
<li><p><strong>NAMES:</strong> 自动分配的容器名称。</p>
</li>
</ul>
</li>
<li><p>查看正在运行的容器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker ps </span><br></pre></td></tr></table></figure></li>
<li><p>查看Docker客户端的所有命令选项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker</span><br></pre></td></tr></table></figure></li>
<li></li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之配置镜像源</title>
    <url>/2022/06/02/docker_%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<ol>
<li><p>修改/etc/docker/daemon.json文件，如果没有先建一个即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/docker/ &amp;&amp; touch daemon.json</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim daemon.json</span><br></pre></td></tr></table></figure>

<p>添加配置文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li>
<li><p>使配置文件生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure></li>
<li><p>重启Docker</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Gitlab之权限控制</title>
    <url>/2022/06/02/gitlab_%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><ol>
<li><p>Guest</p>
<ul>
<li>可以创建issue(事务)、发表评论，不能读写版本库-访客</li>
</ul>
</li>
<li><p>Reporter</p>
<ul>
<li><p>可以克隆代码，不能提交，访问者可以赋予这个权限(报告者；</p>
</li>
<li><p>可以理解为测试员、产品经理等，一般负责提交issue等)</p>
</li>
</ul>
</li>
<li><p>Developer</p>
<ul>
<li>可以克隆代码、开发、提交、push</li>
<li>开发人员可以赋予这个权限(开发者; 负责开发)</li>
</ul>
</li>
<li><p>Master</p>
<ul>
<li>可以创建项目、添加tag、保护分支、添加项目成员、编辑项目</li>
<li>核心负责人可以赋予这个权限(一般是组长，负责对Master分支进行维护)</li>
</ul>
</li>
<li><p>Owner</p>
<ul>
<li>可以设置项目访问权限 - Visibility Level、删除项目、迁移项目、git赋予这个权限(拥有者; 一般是项目经理)</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Gitlab</category>
      </categories>
  </entry>
  <entry>
    <title>Docker之jenkins安装</title>
    <url>/2022/06/02/docker_jenkins_install/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><pre><code class="shell">docker run -d -v jenkins_home:/var/jenkins_home -p 8080:8080 -p 50000:50000 --restart always jenkins/jenkins:lts-jdk11
</code></pre>
<ul>
<li>所有 Jenkins 数据都位于其中 - 包括插件和配置。您可能希望将其设置为显式卷，以便可以对其进行管理并附加到另一个容器进行升级：<code>/var/jenkins_home</code></li>
<li>这将自动在主机上创建“jenkins_home”<a href="https://docs.docker.com/storage/volumes/">docker 卷</a>。Docker 卷保留其内容，即使容器已停止、启动或删除也是如此。</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
  </entry>
  <entry>
    <title>Mysql之事务锁</title>
    <url>/2022/06/02/mysql_%E4%BA%8B%E5%8A%A1%E9%94%81/</url>
    <content><![CDATA[<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="Lock-wait-timeout-exceeded；-try-restarting-transaction"><a href="#Lock-wait-timeout-exceeded；-try-restarting-transaction" class="headerlink" title="Lock wait timeout exceeded； try restarting transaction"></a>Lock wait timeout exceeded； try restarting transaction</h3><ol>
<li><p>mysql查询 正在执行的事务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM information_schema.INNODB_TRX</span><br></pre></td></tr></table></figure>

<p>找到事务的线程ID（trx_mysql_thread_id）</p>
</li>
<li><p>杀掉线程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill  线程id</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
  </entry>
  <entry>
    <title>JSON的常用方法</title>
    <url>/2022/06/02/java_Json%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="JSON转换"><a href="#JSON转换" class="headerlink" title="JSON转换"></a>JSON转换</h3><hr>
<ol>
<li><p>Object转List&lt;&gt;</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> queryJson.get(<span class="string">&quot;data&quot;</span>); </span><br><span class="line">List&lt;BasicMaterialDTOSap&gt; list = JSONObject.parseArray(JSONObject.toJSONString(data), BasicMaterialDTOSap.class);</span><br></pre></td></tr></table></figure></li>
<li><p>去除Json转换的 \ \</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> JSONObject.parseObject(string);</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
  </entry>
  <entry>
    <title>Redis常用命令</title>
    <url>/2022/06/07/redis_%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="Window："><a href="#Window：" class="headerlink" title="Window："></a>Window：</h2><ol>
<li><p>Redis启动命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure></li>
<li><p>window下启动redis服务报错：</p>
<p>creating server tcp listening socket 127.0.0.1:6379: bind No error</p>
<p>解决：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">redis-cli.exe</span><br><span class="line">shutdown</span><br><span class="line">exit</span><br><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
  </entry>
</search>
